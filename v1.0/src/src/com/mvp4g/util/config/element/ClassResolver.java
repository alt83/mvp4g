/**
 * 
 */
package com.mvp4g.util.config.element;

/**
 * A class responsible for generating a fully qualified Java class name.<p/>
 * 
 * The general rules for resolving a class name are as follows:
 * 
 * <ol>
 * <li/> the package attribute on the parent tag is optional, but the class attribute on the
 *       child element is required.
 * <li/> a package name can be specified on the parent tag of one or more elements specifying 
 * 		 a simple class name; the fully qualified class name is generated by joining the package 
 *       name with the class name. 
 *       <pre>
 *       Example: given
 *       
 *       		 &lt;presenters package="com.wombat.foo"&gt;
 *       			&lt;presenter class="MyClass" /&gt;
 *       			&lt;presenter class="YourClass" /&gt;
 *       		 &lt;/presenters&gt;
 *       
 *       the generated class names will be "com.wombat.foo.MyClass" and "com.wombat.foo.YourClass".
 *       </pre>
             
 * <li/> a fully qualified class name specified on a given element takes precedence over
 *       the configured "package" attribute specified on the element's parent tag.<p/>
 *       <pre>
 *       Example: given
 *       
 *       		 &lt;presenters package="com.wombat.foo"&gt;
 *       			&lt;presenter class="com.boohoo.MyClass" /&gt;
 *       		 &lt;/presenters&gt;
 *       
 *       the generated class name will be "com.boohoo.MyClass".
 *       </pre>

 * <li/> 
 * </ol>
 * 
 * @author javier
 *
 */
class ClassResolver {

	
	String getClassNameFrom( String packageName, String className ) {
		
		checkValidityOfClass( className );
		
		String tokens[] = className.split("\\.");
		if ( tokens.length == 1 ) {
			checkValidityOfPackage( packageName, className );
			return packageName + "." + className;
		} 
		return className;
	}

	
	private void checkValidityOfClass(String className) {
		if ( className == null  ||  className.trim().length() == 0 ) {
			throw new IllegalArgumentException( "Class name cannot be null." );
		}
	}


	private void checkValidityOfPackage(String packageName, String className ) {
		if ( packageName == null  ||  packageName.trim().length() == 0 ) {
			throw new IllegalArgumentException( "No package has been specified for class '" + className + "'" );
		}
	}
}
